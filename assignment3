reverse string

.model small
.stack 100h

.data
    prompt db 'enter a string: $'
    newline db 0dh, 0ah, '$'  ; carriage return + line feed
    max_len equ 100           ; maximum string length to prevent stack overflow

.code
main proc
    mov ax, @data
    mov ds, ax
    
    ; display prompt
    mov ah, 09h
    lea dx, prompt
    int 21h
    
    ; initialize character counter
    xor cx, cx        ; cx will hold our character count
    
    ; read characters and push to stack
read_loop:
    mov ah, 01h       ; read character function
    int 21h           ; character stored in al
    
    cmp al, 0dh       ; check for enter key (carriage return)
    je end_read       ; if enter, stop reading
    
    ; push character onto stack
    push ax
    inc cx            ; increment character count
    
    ; prevent stack overflow
    cmp cx, max_len
    jae end_read      ; if we've reached max length, stop
    
    jmp read_loop
    
end_read:
    ; display newline
    mov ah, 09h
    lea dx, newline
    int 21h
    
    ; check if any characters were entered
    cmp cx, 0
    je exit           ; if no characters, exit
    
    ; pop characters from stack and display (reversed order)
reverse_loop:
    pop dx            ; pop character into dx
    mov ah, 02h       ; display character function
    int 21h
    
    loop reverse_loop ; decrements cx and loops if not zero
    
exit:
    mov ah, 4ch       ; exit program
    int 21h
main endp
end main



**80 ascii character

.model small
.stack 100h
.data  
new db 0ah,0dh
.code
main proc  
    mov ax,@data
    mov ds,ax
    
    mov cx,128
    mov bh,80h
    mov bl,0
    mov ah,2
    
    print:
    mov dl,bh
    int 21h
    mov dl,' '
    int 21h
    
    inc bh
    inc bl
    
    cmp bl,10
    jne continue
    
    mov ah,2
    mov dl,0ah
    int 21h
    mov dl,0dh
    int 21h
            
    mov bl,0
                
    continue:
    loop print
    
    exit:
    mov ah,4ch
    int 21h
    main endp
end main


Program 3: A program that will prompt the user to enter a hex digit character ("0"Â· ... "9" or "A" ... "F"), display it on the next line in decimal, and ask the user if he or she wants to do it again. If the user types "y" or "Y", the program repeats; If the user types anything else, the program terminates. If the user enters an illegal character, prompt the user to try again.  
Sample execution: 
ENTER A HEX DIGIT: 9  
IN DECIMAL IS IT 9  
DO YOU WANT TO DO IT AGAIN? y  
ENTER A HEX DIGIT: c  
ILLEGAL CHARACTER - ENTER 0 .. 9 OR A .. F: C  
IN DECIMAL IT IS 12  
DO YOU WANT TO DO IT AGAIN? N   

